{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/PostUser.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postListreducers.js","reducers/userListReducer.js","index.js"],"names":["axios","create","baseURL","_fetchUser","_","memoize","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","id","dispatch","user","wrap","_context2","prev","next","jsonPlaceholder","get","concat","sent","type","payload","data","stop","_x2","_x3","apply","this","arguments","PostUser","props","fetchUser","userId","_this","users","find","react_default","createElement","className","name","React","Component","connect","state","PostList","fetchPosts","posts","map","post","key","title","body","components_PostUser","renderList","_ref","_callee","response","_context","_x","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"oPAEeA,WAAMC,OAAO,CACxBC,QAAS,kDCgBPC,SAAaC,EAAEC,QAAF,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAU,SAAAC,EAAOC,EAAKC,GAAZ,IAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFC,EAAgBC,IAAhB,UAAAC,OAA8BT,IAD5B,OACfE,EADeE,EAAAM,KAErBT,EAAS,CACLU,KAAM,aACNC,QAASV,EAAKW,OAJG,wBAAAT,EAAAU,SAAAf,MAAV,gBAAAgB,EAAAC,GAAA,OAAAvB,EAAAwB,MAAAC,KAAAC,YAAA,ICfbC,8LAEEF,KAAKG,MAAMC,UAAUJ,KAAKG,MAAME,yCAG5B,IAAAC,EAAAN,KACEhB,EAAOgB,KAAKG,MAAMI,MAAMC,KAAK,SAAAxB,GAAI,OAAIA,EAAKF,KAAOwB,EAAKH,MAAME,SAClE,OAAIrB,EAEGyB,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,UAAU3B,EAAK4B,MAFpB,YAPFC,IAAMC,WAmBdC,cALS,SAACC,GACrB,MAAO,CACHT,MAAOS,EAAMT,QAGmB,CAACH,UDVhB,SAACtB,GACtB,OAAQ,SAACC,GACPX,EAAWU,EAAGC,MCQLgC,CAAmDb,GClB5De,8LAEEjB,KAAKG,MAAMe,kDAIX,OAAOlB,KAAKG,MAAMgB,MAAMC,IAAI,SAAAC,GACxB,OACIZ,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OAAOW,IAAKD,EAAKvC,IAC5B2B,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,mCAEbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,WACXF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,eACXF,EAAA9B,EAAA+B,cAAA,UAAKW,EAAKE,OACVd,EAAA9B,EAAA+B,cAAA,SAAIW,EAAKG,MACTf,EAAA9B,EAAA+B,cAACe,EAAD,CAAUpB,OAAQgB,EAAKhB,+CAS7C,OAAOI,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,2BAA2BX,KAAK0B,qBAxBrCb,IAAMC,WAkCdC,cALS,SAACC,GACxB,MAAO,CACHG,MAAQH,EAAMG,QAGqB,CAAED,WFpChB,WACtB,sBAAAS,EAAAnD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAgD,EAAO7C,GAAP,IAAA8C,EAAA,OAAAnD,EAAAC,EAAAM,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cAAA0C,EAAA1C,KAAA,EACoBC,EAAgBC,IAAI,UADxC,OACGuC,EADHC,EAAAtC,KAEHT,EAAS,CACLU,KAAM,cACNC,QAASmC,EAASlC,OAJnB,wBAAAmC,EAAAlC,SAAAgC,MAAP,gBAAAG,GAAA,OAAAJ,EAAA5B,MAAAC,KAAAC,YAAA,KEmCWc,CAAsDE,GC9BtDe,mLAJP,OAAOvB,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,gBAAeF,EAAA9B,EAAA+B,cAACuB,EAAD,cAF3BpB,IAAMC,0BCCToB,cAAgB,CAC3Bf,MCLW,WAAyB,IAAxBH,EAAwBf,UAAAkC,OAAA,QAAAC,IAAAnC,UAAA,GAAAA,UAAA,GAAhB,GAAKoC,EAAWpC,UAAAkC,OAAA,EAAAlC,UAAA,QAAAmC,EACrC,OAAQC,EAAO5C,MACX,IAAK,cACD,OAAO4C,EAAO3C,QAClB,QACI,OAAOsB,IDCdT,MENW,WAAyB,IAAxBS,EAAwBf,UAAAkC,OAAA,QAAAC,IAAAnC,UAAA,GAAAA,UAAA,GAAhB,GAAKoC,EAAWpC,UAAAkC,OAAA,EAAAlC,UAAA,QAAAmC,EACpC,OAAQC,EAAO5C,MACX,IAAK,aACD,SAAAF,OAAAf,OAAA8D,EAAA,EAAA9D,CAAWwC,GAAX,CAAiBqB,EAAO3C,UAC5B,QACE,OAAOsB,cCGXuB,EAAQC,YAAYC,EAASC,YAAgBC,MAGnDC,IAASC,OACTpC,EAAA9B,EAAA+B,cAACoC,EAAA,EAAD,CAAUP,MAAOA,GACf9B,EAAA9B,EAAA+B,cAACqC,EAAD,OACYC,SAASC,cAAc","file":"static/js/main.7202a820.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/'\r\n})","import jsonPlaceholder from  '../apis/jsonPlaceholder';\r\nimport _ from 'lodash';\r\n\r\nexport const fetchPosts = () => {\r\n    return async (dispatch) => {\r\n        const response = await jsonPlaceholder.get('/posts');\r\n        dispatch({\r\n            type: 'FETCH_POSTS',\r\n            payload: response.data\r\n        }) ;\r\n    }\r\n}\r\n\r\nexport const fetchUser = (id) => {\r\n    return  (dispatch) => {\r\n      _fetchUser(id,dispatch);\r\n    }\r\n}\r\n\r\nconst _fetchUser = _.memoize(async (id , dispatch) => {\r\n        const user = await jsonPlaceholder.get(`/users/${id}`);\r\n        dispatch({\r\n            type: 'FETCH_USER',\r\n            payload: user.data\r\n        })\r\n});\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { fetchUser } from '../actions';\r\n\r\nclass PostUser extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchUser(this.props.userId);\r\n    }\r\n\r\n    render(){\r\n        const user = this.props.users.find(user => user.id === this.props.userId)\r\n        if(!user) return null;\r\n\r\n        return <div className=\"header\">{user.name}</div>\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.users\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {fetchUser : fetchUser} )(PostUser)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts } from '../actions';\r\nimport PostUser from './PostUser';\r\n\r\nclass PostList extends React.Component{\r\n    componentDidMount() {\r\n        this.props.fetchPosts();\r\n    }\r\n\r\n    renderList(){\r\n        return this.props.posts.map(post => {\r\n            return (\r\n                <div className=\"item\" key={post.id}>\r\n                    <i className=\"large middle aligned icon user\">\r\n                    </i>\r\n                    <div className=\"content\">\r\n                        <div className=\"description\">\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.body}</p>\r\n                            <PostUser userId={post.userId}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    \r\n    render(){\r\n      return <div className=\"ui relaxed divided list\">{this.renderList()}</div>\r\n    }\r\n\r\n    \r\n}\r\nconst mapStateToProps = (state) => {\r\n return {\r\n     posts : state.posts\r\n }\r\n}\r\nexport default connect(mapStateToProps, { fetchPosts : fetchPosts })(PostList);","import React from 'react';\r\nimport PostList from './PostList';\r\n\r\nclass App extends React.Component {\r\n    render(){\r\n        return <div className=\"ui container\"><PostList /></div>;\r\n    }\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport postListreducers from './postListreducers';\r\nimport userListReducer from './userListReducer';\r\n\r\nexport default combineReducers({\r\n    posts : postListreducers,\r\n    users : userListReducer\r\n})","export default (state = [] , action) => {\r\n   switch (action.type) {\r\n       case 'FETCH_POSTS':\r\n           return action.payload;\r\n       default:\r\n           return state;\r\n   }\r\n}","export default (state = [] , action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_USER':\r\n            return [...state,action.payload];\r\n        default:\r\n          return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore,applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunk))\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n  <App />\r\n</Provider> , document.querySelector('#root')\r\n);"],"sourceRoot":""}